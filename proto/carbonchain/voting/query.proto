syntax = "proto3";

package carbonchain.voting;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "carbonchain/voting/params.proto";
import "carbonchain/voting/voting.proto";

option go_package = "carbonchain/x/voting/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/carbonchain/voting/params";
  
  }
  
  // Queries a list of Proposal items.
  rpc Proposal (QueryProposalRequest) returns (QueryProposalResponse) {
    option (google.api.http).get = "/carbonchain/voting/proposal/{id}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryProposalRequest {
  uint64 id = 1;
}

message QueryProposalResponse {
  Proposal proposal = 1;
}

